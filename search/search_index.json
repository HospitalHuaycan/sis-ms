{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"SIS-MS","text":"<p>SIS-MS es un microservicio escrito en FastAPI que abstrae la interacci\u00f3n con el servicio SOAP oficial del Seguro Integral de Salud (SIS) del Per\u00fa. Expone endpoints REST para autenticarse, consultar el estado de afiliaci\u00f3n y registrar cada transacci\u00f3n en PostgreSQL para efectos de trazabilidad y auditor\u00eda.</p> <p>La aplicaci\u00f3n est\u00e1 pensada para ejecutarse como un servicio independiente y formar parte de arquitecturas orientadas a microservicios. El proyecto incluye herramientas de calidad de c\u00f3digo, scripts de base de datos y documentaci\u00f3n basada en MkDocs Material.</p>"},{"location":"#caracteristicas-principales","title":"Caracter\u00edsticas principales","text":"<ul> <li>Integraci\u00f3n con SOAP mediante <code>zeep</code> para   invocar los m\u00e9todos <code>GetSession</code> y <code>ConsultarAfiliadoFuaE</code> del SIS, con   serializaci\u00f3n autom\u00e1tica de respuestas.</li> <li>API REST asincr\u00f3nica construida con FastAPI. Incluye documentaci\u00f3n   interactiva (Swagger UI y ReDoc), middleware CORS configurable y lifespan   para validar dependencias al arranque.</li> <li>Manejo uniforme de errores gracias al paquete   <code>api_exception</code>. Todas las   respuestas siguen la estructura <code>ResponseModel</code> y utilizan c\u00f3digos declarados   en <code>CustomExceptionCode</code>.</li> <li>Persistencia de consultas en PostgreSQL usando <code>SQLModel</code> y migraciones   administradas por Alembic. Cada petici\u00f3n queda registrada con metadatos y   marcas de error.</li> <li>Estrategia de cach\u00e9 en <code>AfiliadoService</code>: si el documento ya fue consultado   el mismo d\u00eda, la respuesta se atiende desde la base de datos y se vuelve a   registrar la consulta como local.</li> </ul>"},{"location":"#endpoints-expuestos","title":"Endpoints expuestos","text":"M\u00e9todo Ruta Descripci\u00f3n GET <code>/</code> Informaci\u00f3n b\u00e1sica del servicio y enlaces a las UI generadas por FastAPI. GET <code>/health</code> Verifica conectividad con PostgreSQL a trav\u00e9s de <code>DatabaseConfig.test_connection()</code>. POST <code>/login</code> Solicita un token de sesi\u00f3n del SIS usando las credenciales recibidas. POST <code>/consultar_afiliado</code> Consulta el afiliado mediante SOAP, aplica cach\u00e9 y registra la transacci\u00f3n. <p>La Referencia de la API detalla el contrato de peticiones y respuestas, incluyendo c\u00f3digos de error y ejemplos completos.</p>"},{"location":"#componentes-destacados","title":"Componentes destacados","text":"Componente Ubicaci\u00f3n Descripci\u00f3n breve Aplicaci\u00f3n FastAPI <code>app/main.py</code> Define endpoints, ciclo de vida y middleware de CORS. Modelos de entrada <code>app/api/requests.py</code> Esquemas Pydantic utilizados para validar payloads JSON. Servicio SOAP <code>app/services/sis_service.py</code> Encapsula llamadas al SIS y transforma las respuestas SOAP. Servicio de afiliados <code>app/services/afiliado_service.py</code> Orquesta cach\u00e9, invocaciones SOAP y registro hist\u00f3rico. Repositorios <code>app/repositories/</code> Acceso a datos para <code>Afiliado</code> y <code>Consulta</code>. Configuraci\u00f3n de base de datos <code>app/database.py</code> Gestiona la conexi\u00f3n PostgreSQL y expone sesiones reutilizables. Modelos persistentes <code>app/models/afiliado.py</code>, <code>app/models/consulta.py</code> Esquemas <code>SQLModel</code> que representan tablas del dominio."},{"location":"#persistencia-y-registro-historico","title":"Persistencia y registro hist\u00f3rico","text":"<p>El modelo <code>Consulta</code> guarda cada solicitud ejecutada, independientemente del resultado. Los campos disponibles son:</p> Campo Tipo Descripci\u00f3n <code>id</code> <code>integer</code> Identificador autoincremental. <code>numero_documento</code> <code>text</code> Documento consultado (<code>ConsultaAfiliadoRequest.nro_documento</code>). <code>usuario</code> <code>text</code> Usuario responsable registrado en la petici\u00f3n. <code>es_local</code> <code>boolean</code> Indica si la respuesta provino de cach\u00e9 local. <code>error_code</code> <code>text</code> C\u00f3digo de error retornado por el servicio, en caso de falla. <code>error_description</code> <code>text</code> Descripci\u00f3n asociada al c\u00f3digo de error, si existe. <code>created_at</code> <code>timestamp</code> Fecha y hora en la que se registr\u00f3 la consulta. <p><code>Afiliado</code> almacena la \u00faltima versi\u00f3n conocida del asegurado utilizando un esquema amplio que replica los campos devueltos por <code>ConsultarAfiliadoFuaE</code>. <code>AfiliadoRepository.guardar_o_actualizar</code> realiza un upsert bas\u00e1ndose en el n\u00famero de documento.</p>"},{"location":"#flujo-resumido","title":"Flujo resumido","text":"<ol> <li>El cliente realiza una solicitud HTTP hacia FastAPI.</li> <li><code>SISService</code> obtiene (o valida) el token de sesi\u00f3n SOAP.</li> <li>Se invoca <code>ConsultarAfiliadoFuaE</code> y se traduce el resultado a <code>Afiliado</code>.</li> <li><code>AfiliadoService</code> decide si usar cach\u00e9 o actualizar la informaci\u00f3n persistente.</li> <li>Se crea un registro en <code>Consulta</code> con el resultado y se responde mediante    <code>ResponseModel</code>.</li> </ol> <p>Para un detalle m\u00e1s profundo consulta la secci\u00f3n de Arquitectura.</p>"},{"location":"#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<ul> <li>Sigue la gu\u00eda de inicio r\u00e1pido para preparar el   entorno local y ejecutar las migraciones iniciales.</li> <li>Revisa la referencia de la API antes de integrar   consumidores externos.</li> <li>Consulta la secci\u00f3n de Operaciones para conocer tareas   recurrentes, monitoreo y lineamientos de seguridad.</li> </ul>"},{"location":"architecture/","title":"Arquitectura del microservicio","text":"<p>SIS-MS sigue una arquitectura por capas donde la capa HTTP expone operaciones REST y delega la l\u00f3gica de negocio a servicios especializados. A continuaci\u00f3n se describen los componentes principales y c\u00f3mo interact\u00faan entre s\u00ed.</p>"},{"location":"architecture/#componentes-principales","title":"Componentes principales","text":"Componente Ubicaci\u00f3n Responsabilidad FastAPI (<code>app/main.py</code>) Capa de entrada HTTP, define rutas, CORS y ciclo de vida. Modelos de petici\u00f3n <code>app/api/requests.py</code> valida la entrada con Pydantic. Servicio SOAP (<code>SISService</code>) <code>app/services/sis_service.py</code> crea un cliente <code>zeep</code> reutilizable y orquesta <code>GetSession</code>/<code>ConsultarAfiliadoFuaE</code>. Servicio de afiliados <code>app/services/afiliado_service.py</code> aplica estrategia de cach\u00e9 y registra las consultas. Repositorios <code>app/repositories/*</code> encapsulan operaciones con <code>SQLModel</code>. Modelos persistentes <code>app/models/afiliado.py</code> y <code>app/models/consulta.py</code> definen el esquema relacional. Configuraci\u00f3n de base de datos <code>app/database.py</code> construye el motor de SQLAlchemy, gestiona sesiones y pruebas de salud. Manejo de errores <code>app/api/exceptions.py</code> + paquete <code>api_exception</code> proveen c\u00f3digos y respuestas consistentes."},{"location":"architecture/#flujo-de-una-consulta","title":"Flujo de una consulta","text":"sequenceDiagram     participant Cliente     participant API as FastAPI     participant SIS as SISService     participant SOAP as SOAP SIS     participant DB as PostgreSQL      Cliente-&gt;&gt;API: POST /consultar_afiliado     API-&gt;&gt;SIS: Obtener token (GetSession)     SIS-&gt;&gt;SOAP: GetSession(usuario, clave)     SOAP--&gt;&gt;SIS: Token v\u00e1lido     SIS--&gt;&gt;API: Resultado Ok/Err     API-&gt;&gt;SIS: ConsultarAfiliadoFuaE(payload, token)     SIS-&gt;&gt;SOAP: ConsultarAfiliadoFuaE(...)     SOAP--&gt;&gt;SIS: Datos del afiliado o Fault     SIS--&gt;&gt;API: Result (Ok / Err)     API-&gt;&gt;DB: Guardar afiliado y registrar consulta     API--&gt;&gt;Cliente: ResponseModel"},{"location":"architecture/#estrategia-de-cache","title":"Estrategia de cach\u00e9","text":"<p><code>AfiliadoService</code> consulta primero el repositorio <code>ConsultaRepository</code> para saber si el documento fue consultado durante el d\u00eda en curso (<code>verificar_consulta_hoy</code>). Si es as\u00ed se recupera el registro desde la tabla <code>afiliado</code>, se marca la consulta como local (<code>es_local = True</code>) y se responde inmediatamente. En caso contrario se llama a <code>SISService</code>, se realiza un upsert del afiliado y se registra la consulta con los metadatos y errores (si existieran).</p>"},{"location":"architecture/#integracion-soap","title":"Integraci\u00f3n SOAP","text":"<ul> <li><code>SISService</code> crea un cliente <code>zeep.Client</code> \u00fanico mediante <code>@lru_cache</code>, evitando   re-construir el WSDL en cada petici\u00f3n.</li> <li><code>get_session</code> encapsula los posibles fallos y traduce las excepciones en   <code>Result</code> (<code>Ok</code>/<code>Err</code>).</li> <li><code>consultar_afiliado_fuae</code> serializa la respuesta SOAP en un modelo <code>Afiliado</code>.   Si <code>IdError</code> es distinto de \"0\", se considera un error y se devuelve un c\u00f3digo   <code>API-422</code> con el detalle.</li> </ul>"},{"location":"architecture/#persistencia","title":"Persistencia","text":"<ul> <li><code>DatabaseConfig</code> centraliza las credenciales y par\u00e1metros del pool de   conexiones. El motor se crea lazy y se recicla durante el apagado de la app.</li> <li><code>AfiliadoRepository.guardar_o_actualizar</code> implementa un patr\u00f3n upsert manual:   actualiza los campos del registro existente o inserta uno nuevo si no existe.</li> <li><code>ConsultaRepository.registrar_consulta</code> almacena el resultado de cada petici\u00f3n   con la hora exacta (<code>ZoneInfo(\"America/Lima\")</code>).</li> </ul>"},{"location":"architecture/#gestion-de-errores","title":"Gesti\u00f3n de errores","text":"<p><code>CustomExceptionCode</code> define c\u00f3digos legibles (<code>API-401</code>, <code>API-422</code>, etc.) y mensajes humanamente interpretables. <code>register_exception_handlers</code> del paquete <code>api_exception</code> asegura que cualquier error controlado se devuelva con el mismo contrato JSON (<code>ResponseModel</code>). El servicio a\u00f1ade trazas en el log cuando se presentan fallos para facilitar el troubleshooting.</p>"},{"location":"architecture/#dependencias-externas","title":"Dependencias externas","text":"<ul> <li>FastAPI / Pydantic: exposici\u00f3n HTTP y validaci\u00f3n de datos.</li> <li>SQLModel / SQLAlchemy: acceso a PostgreSQL y ejecuci\u00f3n de migraciones con   Alembic.</li> <li>result: simplifica la propagaci\u00f3n de errores sin lanzar excepciones.</li> <li>zeep: cliente SOAP compatible con WSDL.</li> <li>api_exception: capa de abstracci\u00f3n para respuestas uniformes.</li> <li>Logger personalizado (<code>tools/logger</code>): formato coloreado local y soporte   opcional para Google Cloud Logging.</li> </ul>"},{"location":"architecture/#recomendaciones-de-extension","title":"Recomendaciones de extensi\u00f3n","text":"<ul> <li>Para a\u00f1adir nuevos endpoints crea un m\u00f3dulo en <code>app/api</code> y define un servicio o   repositorio espec\u00edfico antes de exponerlo en <code>app/main.py</code>.</li> <li>Si necesitas almacenar m\u00e1s campos devueltos por el SIS, extiende el modelo   <code>Afiliado</code> y genera una migraci\u00f3n con Alembic.</li> <li>Agrega middlewares de m\u00e9tricas o autenticaci\u00f3n seg\u00fan las necesidades de tu   plataforma (por ejemplo, JWT en un gateway externo).</li> </ul>"},{"location":"getting-started/","title":"Gu\u00eda de inicio r\u00e1pido","text":"<p>Esta gu\u00eda explica c\u00f3mo preparar un entorno local de desarrollo o pruebas para SIS-MS. Se asume que cuentas con credenciales v\u00e1lidas del SIS y acceso a un servidor PostgreSQL.</p>"},{"location":"getting-started/#requisitos-previos","title":"Requisitos previos","text":"<ul> <li>Python 3.10 o superior.</li> <li><code>uv</code> como gestor de   dependencias y ejecuci\u00f3n.</li> <li>PostgreSQL 13 o superior (local, en contenedor o administrado).</li> <li>Credenciales SOAP (<code>SOAP_SIS</code>, <code>SOAP_USER</code>, <code>SOAP_PASSWORD</code>).</li> <li>Opcional: Docker para levantar servicios auxiliares r\u00e1pidamente.</li> </ul>"},{"location":"getting-started/#configuracion-de-variables-de-entorno","title":"Configuraci\u00f3n de variables de entorno","text":"<p>Define las variables que utiliza <code>DatabaseConfig</code> y <code>SISService</code>. Puedes almacenarlas en <code>.env.local</code> y reutilizarlas tanto para ejecuci\u00f3n local como para contenedores.</p> <pre><code>SOAP_SIS=https://ws.sis.gob.pe/SiSConsultasWS/Service.asmx?wsdl\nSOAP_USER=usuario-demo\nSOAP_PASSWORD=clave-segura\nDB_SERVER=localhost\nDB_PORT=5432\nDB_NAME=sis_ms\nDB_USER=sis_user\nDB_PASSWORD=sis_password\n</code></pre> <p>\ud83d\udca1 El c\u00f3digo tambi\u00e9n acepta <code>DB_HOST</code>; si ambos (<code>DB_HOST</code> y <code>DB_SERVER</code>) est\u00e1n definidos, <code>DB_HOST</code> tiene prioridad.</p> <p>Carga este archivo con tu gestor preferido (<code>direnv</code>, <code>doppler</code>, <code>docker compose</code> o exportando las variables en la terminal).</p>"},{"location":"getting-started/#instalacion-del-proyecto","title":"Instalaci\u00f3n del proyecto","text":"<pre><code># Clonar el repositorio\ngit clone https://github.com/tu-organizacion/sis-ms.git\ncd sis-ms\n\n# Instalar dependencias (incluye extras de desarrollo)\nuv sync\n</code></pre> <p><code>uv</code> crear\u00e1 un entorno aislado en <code>.venv</code> (o en el directorio global configurado) y resolver\u00e1 las dependencias definidas en <code>pyproject.toml</code>.</p>"},{"location":"getting-started/#base-de-datos-y-migraciones","title":"Base de datos y migraciones","text":"<p>Levanta PostgreSQL en tu entorno. Con Docker puedes iniciar un contenedor m\u00ednimo ejecutando:</p> <pre><code>docker run --name sis-db \\\n  -e POSTGRES_DB=sis_ms \\\n  -e POSTGRES_USER=sis_user \\\n  -e POSTGRES_PASSWORD=sis_password \\\n  -p 5432:5432 \\\n  -d postgres:16\n</code></pre> <p>Aplica las migraciones iniciales con Alembic (utiliza la configuraci\u00f3n de <code>DatabaseConfig</code>):</p> <pre><code>uv run alembic upgrade head\n</code></pre> <p>Si la conexi\u00f3n es correcta ver\u00e1s en la base de datos las tablas <code>consulta</code> y <code>afiliado</code> generadas a partir de los modelos <code>SQLModel</code>.</p>"},{"location":"getting-started/#ejecutar-el-servicio-en-modo-desarrollo","title":"Ejecutar el servicio en modo desarrollo","text":"<pre><code>uv run uvicorn app.main:app --reload --host 0.0.0.0 --port 8000\n</code></pre> <ul> <li>Documentaci\u00f3n interactiva: http://localhost:8000/docs</li> <li>ReDoc: http://localhost:8000/redoc</li> <li>Chequeo de salud: http://localhost:8000/health</li> </ul> <p><code>lifespan</code> realiza una prueba de conexi\u00f3n a PostgreSQL durante el arranque y cierra el motor al finalizar la ejecuci\u00f3n.</p>"},{"location":"getting-started/#pruebas-y-calidad","title":"Pruebas y calidad","text":"<p>Antes de publicar cambios ejecuta los siguientes comandos:</p> <pre><code>uv run pytest              # Pruebas unitarias\nuv run ruff check .        # Linter\nuv run ruff format .       # Formateo autom\u00e1tico\nuv run pyright             # An\u00e1lisis est\u00e1tico de tipos\n</code></pre>"},{"location":"getting-started/#documentacion","title":"Documentaci\u00f3n","text":"<p>La documentaci\u00f3n p\u00fablica se genera con MkDocs Material. Para editarla y visualizar cambios en caliente:</p> <pre><code>uv run mkdocs serve -a 0.0.0.0:8001\n</code></pre> <p>Para producir el sitio est\u00e1tico listo para despliegue:</p> <pre><code>uv run mkdocs build\n</code></pre>"},{"location":"getting-started/#limpieza","title":"Limpieza","text":"<p>Cuando termines, puedes detener los contenedores auxiliares y borrar el entorno virtual si lo deseas:</p> <pre><code>docker stop sis-db &amp;&amp; docker rm sis-db\nuv env remove  # elimina el entorno administrado por uv\n</code></pre> <p>Deja el repositorio con un <code>git status</code> limpio antes de abrir pull requests.</p>"},{"location":"operations/","title":"Operaci\u00f3n y mantenimiento","text":"<p>Esta secci\u00f3n re\u00fane lineamientos para operar SIS-MS en entornos de prueba y producci\u00f3n. Incluye comandos cotidianos, recomendaciones de monitoreo y tareas peri\u00f3dicas relacionadas con la base de datos y las credenciales del servicio SOAP.</p>"},{"location":"operations/#comandos-habituales","title":"Comandos habituales","text":"<pre><code># Ejecutar pruebas y an\u00e1lisis antes de liberar cambios\nuv run pytest\nuv run ruff check .\nuv run pyright\n\n# Formatear el c\u00f3digo fuente\nuv run ruff format .\n\n# Generar una nueva migraci\u00f3n (requiere base de datos configurada)\nuv run alembic revision --autogenerate -m \"descripcion\"\n</code></pre> <p>Ejecuta <code>uv run alembic upgrade head</code> en cada despliegue para asegurar que el esquema coincida con la versi\u00f3n del c\u00f3digo.</p>"},{"location":"operations/#monitoreo-y-health-checks","title":"Monitoreo y health checks","text":"<ul> <li><code>GET /health</code> invoca <code>DatabaseConfig.test_connection()</code> y confirma la conexi\u00f3n   con PostgreSQL. \u00dasalo como readiness probe o chequeo automatizado.</li> <li><code>Logger</code> emite trazas coloreadas en consola por defecto. Para integraciones con   Google Cloud Logging utiliza <code>LogType.GOOGLE_CLOUD</code> al construir la instancia.</li> <li><code>api_exception</code> registra cualquier error controlado; revisa los campos   <code>error_code</code> y <code>description</code> en la respuesta cuando se produzca un fallo.</li> </ul> <p>Considera a\u00f1adir m\u00e9tricas externas (Prometheus, Stackdriver, etc.) para medir el n\u00famero de consultas exitosas/fallidas y los tiempos de respuesta.</p>"},{"location":"operations/#gestion-de-credenciales-y-secretos","title":"Gesti\u00f3n de credenciales y secretos","text":"<ul> <li><code>SOAP_USER</code> y <code>SOAP_PASSWORD</code> son credenciales sensibles. Almac\u00e9nalas en un   gestor de secretos y rota los valores siguiendo las pol\u00edticas de tu   organizaci\u00f3n.</li> <li>Si las credenciales cambian, actualiza el servicio sin reiniciar clientes: el   token de sesi\u00f3n se solicita en cada invocaci\u00f3n de <code>/consultar_afiliado</code>.</li> <li>Configura certificados TLS en el reverse proxy que expone FastAPI.</li> </ul>"},{"location":"operations/#base-de-datos-y-cache","title":"Base de datos y cach\u00e9","text":"<ul> <li><code>AfiliadoService</code> marca cada consulta con <code>es_local</code> cuando responde desde la   cach\u00e9 del d\u00eda (consulta previa registrada en <code>consulta</code>).</li> <li>Para revisar el historial ejecuta consultas sobre la tabla <code>consulta</code>. Por   ejemplo, para detectar errores recientes:</li> </ul> <pre><code>SELECT created_at, numero_documento, error_code, error_description\nFROM consulta\nWHERE created_at &gt; NOW() - INTERVAL '1 day'\nORDER BY created_at DESC;\n</code></pre> <ul> <li>Si necesitas eliminar datos antiguos, crea migraciones o scripts espec\u00edficos;   evita truncar tablas manualmente para mantener auditor\u00eda.</li> </ul>"},{"location":"operations/#migraciones-y-despliegues","title":"Migraciones y despliegues","text":"<ol> <li>Ejecuta las pruebas automatizadas y el an\u00e1lisis est\u00e1tico.</li> <li>Genera la migraci\u00f3n con Alembic (si aplica) y rev\u00edsala antes de aplicarla.</li> <li>Despliega el c\u00f3digo y aplica <code>alembic upgrade head</code> en la misma transacci\u00f3n    de despliegue.</li> <li>Monitorea los logs en busca de fallos del SIS o errores de conexi\u00f3n a la base    de datos.</li> </ol>"},{"location":"operations/#documentacion-y-soporte","title":"Documentaci\u00f3n y soporte","text":"<ul> <li>La documentaci\u00f3n vive en <code>docs/</code> y se publica con <code>uv run mkdocs build</code>.</li> <li>Agrega notas operativas (p.ej. incidencias, cambios de contrato) en este mismo   apartado para mantener un hist\u00f3rico accesible a todo el equipo.</li> <li>Si el servicio SOAP presenta inestabilidad, habilita el nivel <code>DEBUG</code> en el   logger para capturar los mensajes completos devueltos por <code>zeep</code>.</li> </ul>"},{"location":"reference/","title":"Referencia de la API","text":"<p>La API REST de SIS-MS encapsula la comunicaci\u00f3n con el servicio SOAP del SIS y normaliza las respuestas mediante <code>ResponseModel</code>. Todos los endpoints devuelven el mismo contrato para facilitar el consumo por parte de clientes y manejar errores de forma predecible.</p>"},{"location":"reference/#formato-de-respuesta","title":"Formato de respuesta","text":"<pre><code>{\n  \"data\": { \"...\": \"...\" },\n  \"status\": \"SUCCESS\",\n  \"message\": \"Descripci\u00f3n corta\",\n  \"error_code\": null,\n  \"description\": null\n}\n</code></pre> <ul> <li><code>data</code>: carga \u00fatil principal. Puede ser <code>null</code> cuando ocurre un error.</li> <li><code>status</code>: estado sem\u00e1ntico (<code>SUCCESS</code>, <code>WARNING</code> o <code>FAIL</code>).</li> <li><code>message</code>: texto breve orientado al usuario.</li> <li><code>error_code</code>: identificador \u00fanico definido en <code>CustomExceptionCode</code>.</li> <li><code>description</code>: detalles adicionales (por ejemplo, el mensaje original del SIS).</li> </ul>"},{"location":"reference/#endpoints-disponibles","title":"Endpoints disponibles","text":"M\u00e9todo Ruta Descripci\u00f3n GET <code>/</code> Informaci\u00f3n general del microservicio. GET <code>/health</code> Verifica conectividad con la base de datos. POST <code>/login</code> Obtiene un token de sesi\u00f3n v\u00e1lido del SIS. POST <code>/consultar_afiliado</code> Consulta la afiliaci\u00f3n utilizando el token SOAP. <p>Las secciones siguientes describen los endpoints cr\u00edticos y proporcionan payloads de ejemplo:</p> <ul> <li>Autenticaci\u00f3n</li> <li>Consulta de afiliados</li> </ul>"},{"location":"reference/#codigos-de-error","title":"C\u00f3digos de error","text":"<p><code>CustomExceptionCode</code> define los c\u00f3digos y mensajes utilizados por la API. Los m\u00e1s relevantes son:</p> C\u00f3digo HTTP Descripci\u00f3n <code>API-401</code> 401 Credenciales SOAP inv\u00e1lidas. <code>API-422</code> 422 La respuesta del SIS indic\u00f3 un error en la consulta. <code>API-503</code> 503 No se pudo conectar al servicio SOAP. <code>API-504</code> 500/503 Ocurri\u00f3 un fault o excepci\u00f3n inesperada en <code>ConsultarAfiliadoFuaE</code>. <code>API-505</code> 503 El SIS devolvi\u00f3 un fault al ejecutar <code>GetSession</code>. <p>Cuando se produce un error, <code>status</code> pasa a <code>FAIL</code>, <code>data</code> es <code>null</code> y la respuesta incluye <code>error_code</code> y <code>description</code> para facilitar el diagn\u00f3stico.</p>"},{"location":"reference/autenticacion/","title":"Autenticaci\u00f3n: <code>POST /login</code>","text":"<p>Solicita un token de sesi\u00f3n v\u00e1lido al servicio SOAP del SIS. Este token puede ser reutilizado por clientes que gestionen su propia cache; el endpoint <code>/consultar_afiliado</code> solicita internamente un token usando las credenciales configuradas en variables de entorno.</p>"},{"location":"reference/autenticacion/#solicitud","title":"Solicitud","text":"<ul> <li>M\u00e9todo: <code>POST</code></li> <li>Cabeceras: <code>Content-Type: application/json</code></li> <li>Body:</li> </ul> <pre><code>{\n  \"usuario\": \"string\",\n  \"clave\": \"string\"\n}\n</code></pre> Campo Tipo Obligatorio Descripci\u00f3n <code>usuario</code> string S\u00ed Usuario habilitado en el servicio SOAP del SIS. <code>clave</code> string S\u00ed Contrase\u00f1a asociada al usuario SOAP."},{"location":"reference/autenticacion/#respuesta-exitosa","title":"Respuesta exitosa","text":"<ul> <li>C\u00f3digo HTTP: <code>200 OK</code></li> <li>Cuerpo:</li> </ul> <pre><code>{\n  \"data\": {\n    \"token\": \"abc123\"\n  },\n  \"status\": \"SUCCESS\",\n  \"message\": \"Sesi\u00f3n obtenida exitosamente\",\n  \"error_code\": null,\n  \"description\": null\n}\n</code></pre> <p>El campo <code>token</code> corresponde al valor devuelto por la operaci\u00f3n SOAP <code>GetSession</code>.</p>"},{"location":"reference/autenticacion/#errores-comunes","title":"Errores comunes","text":"C\u00f3digo HTTP Motivo <code>API-401</code> 401 Credenciales inv\u00e1lidas; el SIS respondi\u00f3 con un mensaje de error. <code>API-422</code> 500 La respuesta del SOAP no tuvo el formato esperado (respuesta no es string). <code>API-503</code> 503 No fue posible inicializar el cliente SOAP (<code>SOAP_SIS</code> inaccesible). <code>API-505</code> 503 El SIS devolvi\u00f3 un fault durante <code>GetSession</code>. <p>Cuando ocurre un error el servicio registra la excepci\u00f3n (<code>log_exception=True</code>) y responde con <code>status = \"FAIL\"</code>, <code>data = null</code> y <code>description</code> cuando el SIS retorna un mensaje adicional.</p>"},{"location":"reference/consultas/","title":"Consulta de afiliados: <code>POST /consultar_afiliado</code>","text":"<p>Consulta la afiliaci\u00f3n de una persona utilizando el servicio SOAP del SIS. Antes de invocar el SOAP, el microservicio obtiene un token de sesi\u00f3n con las credenciales almacenadas en variables de entorno (<code>SOAP_USER</code>, <code>SOAP_PASSWORD</code>).</p>"},{"location":"reference/consultas/#solicitud","title":"Solicitud","text":"<ul> <li>M\u00e9todo: <code>POST</code></li> <li>Cabeceras: <code>Content-Type: application/json</code></li> <li>Body:</li> </ul> <pre><code>{\n  \"opcion\": 1,\n  \"dni\": \"46118717\",\n  \"tipo_documento\": \"D\",\n  \"nro_documento\": \"46118717\",\n  \"disa\": null,\n  \"tipo_formato\": null,\n  \"nro_contrato\": null,\n  \"correlativo\": null,\n  \"usuario\": \"operador-app\"\n}\n</code></pre> Campo Tipo Obligatorio Descripci\u00f3n <code>opcion</code> integer S\u00ed Par\u00e1metro <code>intOpcion</code> utilizado por el SIS para distinguir el tipo de b\u00fasqueda. <code>dni</code> string S\u00ed DNI del responsable de la consulta (para trazabilidad). <code>tipo_documento</code> string S\u00ed Tipo de documento del afiliado (por ejemplo <code>D</code>). <code>nro_documento</code> string S\u00ed N\u00famero de documento del afiliado. <code>disa</code> string No C\u00f3digo DISA utilizado por el SIS. <code>tipo_formato</code> string No Tipo de formato esperado en la respuesta. <code>nro_contrato</code> string No N\u00famero de contrato si aplica. <code>correlativo</code> string No Valor correlativo para contratos vigentes. <code>usuario</code> string S\u00ed Usuario o sistema que ejecuta la consulta; se almacena en el historial."},{"location":"reference/consultas/#respuesta-exitosa","title":"Respuesta exitosa","text":"<ul> <li>C\u00f3digo HTTP: <code>200 OK</code></li> <li>Cuerpo:</li> </ul> <pre><code>{\n  \"data\": {\n    \"IdError\": \"0\",\n    \"Resultado\": \"ASEGURADO ACTIVO\",\n    \"TipoDocumento\": \"D\",\n    \"NroDocumento\": \"46118717\",\n    \"ApePaterno\": \"PEREZ\",\n    \"ApeMaterno\": \"GARCIA\",\n    \"Nombres\": \"JUAN CARLOS\",\n    \"FecAfiliacion\": \"2024-01-01\",\n    \"DescTipoSeguro\": \"SIS GENERAL\",\n    \"Estado\": \"ACTIVO\",\n    \"...\": \"Otros campos disponibles en app/models/afiliado.py\"\n  },\n  \"status\": \"SUCCESS\",\n  \"message\": \"Consulta realizada correctamente\",\n  \"error_code\": null,\n  \"description\": null\n}\n</code></pre> <p>Adem\u00e1s de entregar la respuesta al cliente:</p> <ol> <li><code>AfiliadoRepository</code> guarda o actualiza el registro del afiliado.</li> <li><code>ConsultaRepository</code> crea un historial con <code>numero_documento</code>, <code>usuario</code>,    <code>es_local</code> y posibles c\u00f3digos de error.</li> <li>Si el documento ya fue consultado durante el d\u00eda, la respuesta proviene del    cach\u00e9 local (<code>es_local = True</code>).</li> </ol>"},{"location":"reference/consultas/#errores-comunes","title":"Errores comunes","text":"C\u00f3digo HTTP Motivo <code>API-401</code> 401 No se pudo obtener un token de sesi\u00f3n v\u00e1lido (credenciales inv\u00e1lidas). <code>API-422</code> 422 El SIS respondi\u00f3 con <code>IdError != 0</code>; el detalle se incluye en <code>description</code>. <code>API-503</code> 503 No fue posible inicializar o contactar el servicio SOAP. <code>API-504</code> 503 o 500 <code>ConsultarAfiliadoFuaE</code> devolvi\u00f3 un fault o lanz\u00f3 una excepci\u00f3n inesperada. <p>Revisa <code>error_description</code> en el historial de la tabla <code>consulta</code> para conocer el mensaje devuelto por el SIS cuando se produce una falla.</p>"}]}